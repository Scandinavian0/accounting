<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="${package.Mapper}.${table.mapperName}">

#if(${enableCache})
    <!-- 开启二级缓存 -->
    <cache type="org.mybatis.caches.ehcache.LoggingEhcache"/>

#end
#if(${baseResultMap})
    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.smac.data.entity.${entity}">
#foreach($field in ${table.fields})
#if(${field.keyFlag})##生成主键排在第一位
        <id column="${field.name}" property="${field.propertyName}" />
#end
#end
#foreach($field in ${table.commonFields})##生成公共字段
    <result column="${field.name}" property="${field.propertyName}" />
#end
#foreach($field in ${table.fields})
#if(!${field.keyFlag})##生成普通字段
        <result column="${field.name}" property="${field.propertyName}" />
#end
#end
    </resultMap>

#end

#if(${global.modulePath} != "smac-data")
#if(${baseColumnList})
#set ($i=1)
    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
#foreach($field in ${table.fields})
#if($i == ${fieldCount})
          ${abbr}.${field.name}
#else
          ${abbr}.${field.name},
#end
#set($i=$i+1)
#end
    </sql>

#end
    #if(${global.isPage})

    <select id="page" resultType="${entity}Vo">
        select <include refid="Base_Column_List"/> from ${table.name} ${abbr}
        <where>
#foreach($field in ${table.fields})
 #if(${field.columnType}=="STRING")
            <if test="params.${field.propertyName} != null and params.${field.propertyName}.trim() != ''">
                and ${abbr}.${field.name} like CONCAT(CONCAT('%',#{params.${field.propertyName}}),'%')
            </if>
#elseif(${field.name}=="id")
#elseif(${field.columnType}=="BOOLEAN")
            <if test="params.${field.propertyName} != null">
                and ${abbr}.${field.name} = #{params.${field.propertyName}}
            </if>
#elseif(${field.columnType}=="DATE" || ${field.columnType}=="DATETIME")
            <if test="params.${field.propertyName}_from != null and params.${field.propertyName}_from.trim() != ''">
                and ${abbr}.${field.name}  <![CDATA[>= ]]> #{params.${field.propertyName}_from}
            </if>
            <if test="params.${field.propertyName}_to != null and params.${field.propertyName}_to.trim() != ''">
                and ${abbr}.${field.name}  <![CDATA[<= ]]> #{params.${field.propertyName}_to}
            </if>
#else
            <if test="params.${field.propertyName} != null and params.${field.propertyName}.trim() != ''">
                and ${abbr}.${field.name} = #{params.${field.propertyName}}
            </if>
#end
#end
        </where>
        order by ${abbr}.id desc
    </select>
    #end

    #if( ${global.isExportExcel})
    #set ($i=1)

    <select id="list" resultType="${entity}Vo">
       select
#foreach($field in ${table.fields})
#if($i == 1)
#elseif($i == ${fieldCount})
          ${abbr}.${field.name}
#else
          ${abbr}.${field.name},
#end
#set($i=$i+1)
#end
        from ${table.name} ${abbr}
            <where>
#foreach($field in ${table.fields})
#if(${field.columnType}=="STRING")
                <if test="params.${field.propertyName} != null and params.${field.propertyName}.trim() != ''">
                    and ${abbr}.${field.name} like CONCAT(CONCAT('%',#{params.${field.propertyName}}),'%')
                </if>
#elseif(${field.name}=="id")
#elseif(${field.columnType}=="BOOLEAN")
                <if test="params.${field.propertyName} != null">
                    and ${abbr}.${field.name} = #{params.${field.propertyName}}
                </if>
#elseif(${field.columnType}=="DATE" || ${field.columnType}=="DATETIME")
                 <if test="params.${field.propertyName}_from != null and params.${field.propertyName}_from.trim() != ''">
                    and ${abbr}.${field.name}  <![CDATA[>= ]]> #{params.${field.propertyName}_from}
                </if>
                <if test="params.${field.propertyName}_to != null and params.${field.propertyName}_to.trim() != ''">
                    and ${abbr}.${field.name}  <![CDATA[<= ]]> #{params.${field.propertyName}_to}
                </if>
#else
                <if test="params.${field.propertyName} != null and params.${field.propertyName}.trim() != ''">
                    and ${abbr}.${field.name} = #{params.${field.propertyName}}
                </if>
 #end
#end
            </where>
        order by ${abbr}.id desc
    </select>
    #end
#end

</mapper>
